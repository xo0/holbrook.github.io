#+TITLE: 服务模型建议书
#+AUTHOR: 王海阔


* 概述
** 目的

   王总提出了“ESB/统一接入平台协议标准化的技术支持平台”，其中最核心的组件是“协议管理器(Protocol Manager)”。协议管理器要支持
协议定义、协议浏览以及测试案例编写功能，并通过协议描述文件(Protocol profile)和测试案例库(Test Case Repository)
管理协议和测试案例。


   在《统一接入问题分析报告》中，我对下一代中现存问题的优先级建议如下：


  [[./abc.jpg]]


    综合考虑，我们需要建立一个“服务模型”，涵盖业务层、应用层、基础设施层，通过三个层面之间模型元素的关联，管理业务和IT的对齐关系。
并以此作为后续实现服务管理、服务模拟、自动测试等目标的基础。
    通过服务模型，还可以对业务分析、服务设计等方面进行规范，在整体架构的层面，达到“业务组件化，服务能力化”。

** SOMA、RUP和服务模型

IBM SOMA(Service Oriented Modeling and Architecture, 面向服务的建模和架构)，
提供了遵循SOA(Service-Oriented Architecture，面向服务的体系结构) 进行业务分析、服务设计、服务实现以及服务规范的一系列方法，“这是一种切实可行的方法”[fn:1]。

SOMA为建立SOA框架提供了方法论层面的指导，而RUP(Rational Unified Process，统一软件过程）是一套重量级的软件过程方法论。
RUP中早就包含了RUP for SOA的内容，从RUP v7.0.1开始，RUP中关于SOA的部分开始基于SOMA方法论，称为 RUP/SOMA。

RUP/SOMA使用RUP中软件过程通用的一些概念，如阶段(phase),活动(activity)、任务(task)、工件(artifact)、角色(actor)等，
来描述SOMA过程和方法，使得应用SOMA变得更加明确、具体、可操作。下图是RUP/SOMA的一个概览：

[[./ngntsup_images/soma_overview.png]]


经过一系列的阶段和活动，RUP/SOMA最终会产生一套完整的服务模型，如下图：

[[./ngntsup_images/soma_service_model.png]]

** 范围和表述方式

本文探讨服务模型的概念模型。从业务视角、应用视角、基础设施视角和规范视角对服务模型的各个部分进行设计，最终形成服务模型的全貌。

作为服务模型元素的来源，本文会提及一些建立服务模型所需要的过程和方法论，但不作为重点。

在本文中，使用UML表示概念模型的设计。

* 服务模型设计

** 模型概览

服务模型要涵盖业务层，应用层和基础设施层，并在层之间进行对齐。服务模型的核心元素如下图所示：

[[./ngntsup_images/index.png]]

1. 业务组件
   业务决定服务，通过业务分析将业务“组件化”是设计服务的前提和基础。
2. 服务
   服务是SOA的核心元素。在本方案中，“服务”限定为通过统一接入/ESB暴露出来的、用以支撑业务组件的软件资源[fn:2]。
   为了便于服务的治理，会按照IBM划分的SOA服务类型对服务进行分类。
3. ESB
   服务消费者通常不直接访问服务提供者，而是通过一个中介进行解耦。ESB/统一接入扮演者这样的中介角色。
   为了有效的解耦，ESB至少要实现协议调解（通信协议转换）、接口调解（消息/报文转换）、操作调解（基于内容的路由）。
4. 服务提供者
   按照CQRS(Command Query Responsibility Segregation，命令查询职责分离模式)，应该有多种类型的服务提供者。
   比如，我们现在的服务提供者包括各个应用系统（处理业务操作，偏重事务管理）和查询服务系统（偏重数据处理和查询），
   以后还应该有消息队列、规则引擎/CEP引擎，服务编排引擎，以满足更复杂的需要。
5. 数据交换协议
   不管是ESB暴露出来服务，还是各个服务提供者实现的接口，都应该有准确、及时的数据交换协议资料。
   通过一套统一的数据交换协议规范，可以涵盖各种协议描述的需要。

以上是服务模型最核心的元素，下面从业务视角、应用视角、基础设施视角和规范视角对模型进行展开。

** 业务视角

业务是IT的前提和基础。业务必须“组件化”，IT才能“服务化”。在这方面，CBM（Component Business Modeling，组件业务建模）
提供了很好方法。CBM用类似软件模块化思想，提供了一个框架将业务活动模块化，提取出可重用的业务组件，
并用责任级别和业务能力两个维度管理这些业务组件。如下图：

[[./ngntsup_images/cbm_framework.png]]

CBM“是一种经过证明的方法” ，可以作为SOA的最佳切入点。

在CBM的基础上，进行一些扩展和补充，则从业务视角看待的服务模型如下：

[[./ngntsup_images/biz_view.png]]


1. 责任级别
   沿用CBM中的三个级别：即引导、控制、执行，对应管理中的决策层、管理层、操作层三个层次。
   并且固化下来，不再增加。
2. 业务类别
   即CBM中的“业务能力”，需要根据实际业务进行划分，并且后续可以修改。对于业务分类，证监会的《证券期货业数据通信协议应用指南》中
   给出了很好的一个基础，即：交易，结算，信息披露，监管报送，行业间，其它。可以在此基础上进行扩展，比如增加“客户管理”等业务类别。
3. 业务组件
   即使用CBM方法分析得出的可复用的业务单元。一个业务组件属于一个责任级别和一个业务类别。
4. 服务
   服务支持业务组件；一个业务组件可能依赖多个服务，一个服务也可能被多个业务组件使用。
5. 业务对象和业务对象属性
   一个业务组件可能访问多个业务对象（读或写）。业务对象也应该归属于某个业务类别。
   引入业务对象和业务对象属性，可以支持通信协议管理标准字典、标准字典等内容（参见后续章节）。
6. 业务角色、业务流程、业务用例
   业务组件还可以关联到业务角色、业务流程、业务用例，这些元素作为服务模型的可选项，在需要管理业务过程时进行补充。
   这里面需要强调的是，“业务用例”元素是支持业务层面自动化测试的必要元素。

** 应用视角

业务角度可以通过“责任级别”和“业务类别”对“业务组件”进行分类；从IT的角度，“服务”也应该按照“能力类别”进行分区，以便于服务的发现和治理。
应用层面另一个重要的内容就是如何定义严格的通信协议。
作为一个可选的部分，在应用层还可以定义服务的SLA（Service Level Agreement，服务水平协议），作为服务运行和监控的标准。

应用视角下的服务模型如下：




从应用角度看，
1. 协议的描述
2. 服务的治理


[[./ngntsup_images/service_category.jpg]]


服务的分类：
服务类别有：
中介服务：负责将服务消费者与服务供应商绑定。很明显可以通过解决位置问题实现跨网络请求路由最优化，满足业务目标。中介服务通常通过一些有意义的活动增加附加价值，比如日志记录或翻译，还有连通性。
交互服务：提供业务设计的表示逻辑，并支持应用程序和终端用户之间的交互。
进程服务：包括各种形式的组成逻辑，特别是业务进程流。
信息服务：提供业务设计的数据逻辑。实现提供业务持久化数据的存取，支持业务数据组成，并提供其自身的子架构来跨组织管理数据流。
存取服务：将遗留应用程序和功能集成到面向服务的架构解决方案。
安全服务：负责保护免受贯穿整个 SOA 脆弱部分的威胁。主要负责保护服务消费者和服务供应商之间的交互，以及保护所有对该架构有贡献的元素。
伙伴服务：捕获在业务设计中有直观表现形式的合作伙伴互操作性语义。
生命周期服务：支持管理 SOA 解决方案生命周期以及贯穿开发和管理，从策略到基础架构的所有构成元素。
资产和注册表服务：提供资产访问权限，这是整个架构的一部分，包括服务描述、软件服务、策略、文档以及其他业务操作必不可少的资产和构件。
基础架构服务：提供资源的高效利用，确保完善的操作环境，平衡工作负载以满足服务水平目标，隔离工作以避免干扰，执行维护，安全访问可信业务流程和数据，简化系统整体管理。
管理服务：提供管理工具和度量集以监控服务流、底层系统健康状况、资源利用、中断和瓶颈的鉴定、服务目标实现、管理策略执行以及故障恢复。
开发服务：支持整套架构工具、建模工具、开发工具、视觉构成工具、组装工具、方法论、调试辅助程序、基础架构工具以及构建一个 SOA 解决方案所需的探索代理。
战略与规划服务：支持创建愿景、蓝图以及移交计划以提高业务成果以及处理该业务策略的服务来创建一个涵盖服务和 IT 的实现路线路。
业务应用服务：实现核心业务逻辑，其中实现是在一个业务模型中特别创建的。
业务服务：捕获业务功能，作为粗粒度进程服务提供给外部消费者。


** 基础设施视角

** 规范视角

规范全景



* 服务模型管理平台设计

** 接口设计

** 扩展性

测试工具，。。。。

为测试工具提供。。。




* 附录
** RUP/SOMA规定了一系列的活动，包括

1. 业务调研
   + 评估目标组织
   + 设置和调整目标
   + 确定业务目标和 KPI
   + 查找业务参与者和用例
   + 业务体系结构分析
   + 获取常见业务词汇表
   + 维护业务规则
   + 功能区域分析
2. 业务分析
   + 功能区域分析
   + 流程分解
   + 业务流程分析
   + 业务用例分析（SOA）
   + 执行面向差异的分析
3. 服务设计
   + 确定业务目标和 KPI
   + 确定服务并将服务与目标关联
   + 现有系统分析
   + 技术可行性探索
4. 规范
   + 服务规范
     - 应用服务石蕊测试
     - 对服务依赖关系建模
     - 对服务组合和流程建模
     - 记录服务的非功能需求
     - 确定安全性模式
     - 指定服务消息
     - 记录服务状态管理决策
   + 子系统规范
     - 确定子系统依赖关系
     - 确定服务组件
     - 确定功能组件
     - 确定技术组件
   + 组件规范
     - 指定组件属性
     - 确定事件和消息
     - 对组件流建模
     - 创建组件类图
     - 执行面向差异的设计
5. 服务实现
   + 记录服务实现决策
   + 将服务组件分配到层
   + 将组件分配到层
   + 执行详细的技术可行性探索

本文讨论，对RUP/SOMA进行必要的剪裁，通过结构化的模型管理服务模型。




* 参考资料

1. 王海航.面向服务架构（SOA）的基本概念和方法.
2. IBM.基于服务的建模和架构[EB/OL].http://www.ibm.com/developerworks/cn/webservices/ws-soa-design1/
3. RUP v7.0.1
4. IBM.IBM Service-Oriented Modeling and Architecture[EB/OL].http://www-935.ibm.com/services/us/gbs/bus/pdf/g510-5060-ibm-service-oriented-modeling-arch.pdf
5. IBM.组件化业务模型白皮书[EB/OL].http://www-935.ibm.com/services/tw/cio/pdf/cbm_whitepaper_tc.pdf
6. IBM.基于 CBM, SIMM 和 SOMA 的 SOA 的最佳实践[EB/OL].http://www.ibm.com/developerworks/cn/webservices/0909_CBM_SIMM_SOMA_soa/index.html
7. IBM.IBM 在 SOA 参考架构标准中的优势[EB/OL].http://www.ibm.com/developerworks/cn/webservices/ws-soa-ref-arch/index.html

8. Enterprise_Integration_Patterns


6. 证监会.证券期货业数据通信协议应用指南(JR/T 0111-2014), 2014-12-26.
7. 证监会.证券公司客户资料管理规范(JR/T 0110-2014), 2014-12-26.
8. 上交所.上海证券交易所综合业务平台市场参与者接口规格说明书v1.30[EB/OL].http://bbs.hysec.com/bbs/forum.php?mod=attachment&aid=MjI5NXwxMjE5NzIzZXwxNDIzMTIwODc2fDQxfDE1NDYzNDM%3D .
9. OMG.XPDL and BPMN[EB/OL].http://www.omg.org/bpmn/Documents/XPDL_BPMN.pdf

* Footnotes

[fn:1] “IBM提出的SOMA（Service Oriented Modeling and Architecture，面向服务的建模与架构）为面向服务的分析和设计提供了一种切实可行的方法。“ 王海航《面向服务架构（SOA）的基本概念和方法

[fn:2] RUP中对服务的定义为：“服务是有具体化服务规范的软件资源（可发现的）。此服务规范可供服务使用者进行搜索、绑定和调用。
    服务提供者实现了服务规范实施，还为服务使用者交付服务需求的质量。
    服务应该由说明性策略管理，因此支持可动态重配置的体系结构样式。”
