#+CATEGORY: work
* 基础
发件人： wanghaihang <wanghaihang@gmail.com>
日期： 01/11/2013 05:44上午
主题： Twitter Complex Event Processing (CEP) with Esper and Drools


http://www.tuicool.com/articles/rARF73


** DONE CEP基本概念
   CLOSED: [2012-11-06 Tue]
   - State "DONE"       from "STARTED"    [2014-02-24 Mon 17:17]

blog: [[file:blogs/posts/develop/cep_about.org]]


* 选型和调研   [3/3]
** CANCELLED CEP选型要素
   CLOSED: [2014-04-18 Fri 10:37] SCHEDULED: <2014-02-24 Mon>
   - State "CANCELLED"  from "SOMEDAY"    [2014-04-18 Fri 10:37] \\
     DO t2
   :PROPERTIES:
   :ID:       23191C2D-1010-4A69-851C-EC638CCB1316
   :END:

   paper: file:papers/cep_selection.org

** DONE 凌志CEP调研
   CLOSED: [2014-02-27 Thu 21:03] SCHEDULED: <2014-02-24 Mon>
   - State "DONE"       from "STARTED"    [2014-02-27 Thu 21:03]
   :PROPERTIES:
   :ID:       1D5FDD14-4862-4ADD-8468-681A30077A2F
   :END:

时点：2月27日（本周四）下午1点到2点半
地点：3层9号会议室
议题：与凌志驻场开发人员交流MOT引擎技术架构


另附之前的简要技术评价，供参考：

结合淘宝CEP系统，进行了以下比较。

淘宝CEP系统比较关键的模块有八个，如下所示，其中核心的有四个：EPL解析器、预处理、CEP规则引擎、数据模型。

1. EPL解析器：在CEP系统中，EPL是用来描述复合事件的语言，会被EPL解析器处理，成为内部可以使用的规则。EPL许多都扩展自SQL（微软的扩展自LINQ），底层的数据模型都是数据库，所以EPL解析器做的就是将EPL转成SQL，通常会使用到数据库的Trigger、Stored Procedure等机制。
凌志的MOT软件有这一层设计，也做了一定的封装，但封装的还比较原始，我个人觉得凌志的这种封装还不算是EPL语言级别的封装，只能算是统一接口级别的封装，仅仅是为了方便程序内部的运行调度，其和esper epl相比，完全不在一个层次。

2. 规则管理：管理EPL。
这点凌志的MOT软件做的比较好，实现了图形化管理和监控。开源的drools基本没有自带的图形化管理界面。

3. 事件接入：通过SOA、ESB、MOM、读取日志等方式将消息接入。
凌志目前只展现了数据库读这一种事件源接入方式。其它常用的接入方式都要硬编码，这点不是很灵活。

4. 预处理：预处理模块会将事件送进CEP引擎之前预先做处理，包括字段过滤、字段填入、事件过滤、事件分流、事件合流等。请注意：预处理过程一定需要读取事件内容，然后根据事件内容做处理（但不会将事件关联起来，因为这是CEP引擎的工作）
凌志的软件支持预处理，甚至我觉得，这是凌志MOT最大的亮点，基于管道流的预处理模式。


5. CEP规则引擎：找出事件关联。
凌志的逻辑规则比较简单，就“or”和"and"以及两者的组合，连最基本的程序化控制规则（比如if-else、when-then等）都没有。目前主流的开源产品，比如drools规则语言都支持程序化控制规则。在这点上，凌志做的很一般。故我认为它没有事件推理这一基本能力，故也就没有CEP规则引擎。

6. 数据模型：维护内部数据。现在的CEP规则引擎几乎都采用数据库表当做底层数据模型。事件会先进入数据库，一定时间（或数量）之后进行检查，若符合规则，就找到了复合事件，将此复合事件放进另一个表中。
凌志的MOT软件也有类似的设计。

7. 事件发派：将已经发现的复合事件发派到负责处理的行动模块中。
凌志定义了统一的事件描述，完全支持事件派发功能。

8. 行动模块：对复合事件采取行动。
我觉得这一点不是CEP系统必须的功能，凌志的软件也没怎么支持这一点。

       总的来说，凌志的MOT系统眨眼一看貌似CEP系统，但在本质设计上还不算，因为它缺少事件推理这一最核心的设计，更多的算是针对MOT设计的一款特定用途的软件产品。用其支撑MOT事件绰绰有余，但如果要在其上扩展使用场景成为CEP系统，我觉得有点不太合适。
** CANCELLED CEP选型报告
   CLOSED: [2014-04-18 Fri 10:50] SCHEDULED: <2014-03-06 Thu>
   - State "CANCELLED"  from ""           [2014-04-18 Fri 10:50] \\
     goto T2
   :PROPERTIES:
   :ID:       47DA896F-4602-48EC-AE5A-4DBAA4641924
   :END:

   Drools,Epser,开源vs商业
