<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>心内求法 - 数据科学</title><link href="http://holbrook.github.io/" rel="alternate"></link><link href="http://holbrook.github.io/feeds/shu-ju-ke-xue.atom.xml" rel="self"></link><id>http://holbrook.github.io/</id><updated>2017-02-11T00:00:00+08:00</updated><entry><title>基于Python的数据科学环境</title><link href="http://holbrook.github.io/2017/02/11/dataology_python_env.html" rel="alternate"></link><published>2017-02-11T00:00:00+08:00</published><updated>2017-02-11T00:00:00+08:00</updated><author><name>Holbrook</name></author><id>tag:holbrook.github.io,2017-02-11:/2017/02/11/dataology_python_env.html</id><summary type="html">&lt;p&gt;在&lt;a href="http://holbrook.github.io/2017/02/05/index.html"&gt;《数据科学的知识体系》&lt;/a&gt;中，
列出了进行数据科学研究所需的知识。但Swami Chandrasekaran明显更喜欢 R 。
我个人更倾向于 python。而且 python 和 R可以互相调用[]
本文列出数据科学相关的 python 模块。&lt;/p&gt;</summary><content type="html">&lt;p&gt;在&lt;a href="http://holbrook.github.io/2017/02/05/index.html"&gt;《数据科学的知识体系》&lt;/a&gt;中，
列出了进行数据科学研究所需的知识。但Swami Chandrasekaran明显更喜欢 R 。
我个人更倾向于 python。至于为什么不是 R 或 Matlib，可以参考
&lt;a href="https://futures.io/matlab-r-project-python/33828-r-vs-python-vs-matlab-quant-language-war.html"&gt;《R vs Python vs matlab: the quant language war》&lt;/a&gt;和
&lt;a href="http://nbviewer.jupyter.org/gist/xccds/d692e468e21aeca6748a"&gt;《R和Python的相遇》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;其实，R 和 python 的边界也不是那么的无法逾越，
可以使用&lt;a href="https://rpy2.bitbucket.io/"&gt;rpy2&lt;/a&gt;在 python 中调用 R，
也可以使用&lt;a href="http://rpython.r-forge.r-project.org/"&gt;rPython&lt;/a&gt;在 R 中调用 python。&lt;/p&gt;
&lt;h1 id="yun-xing-huan-jing"&gt;运行环境&lt;/h1&gt;
&lt;h2 id="anaconda"&gt;Anaconda&lt;/h2&gt;
&lt;p&gt;尽管 Linux 和 Mac OS 自带了 python 环境，但还是推荐安装 &lt;a href="https://www.continuum.io"&gt;Anaconda&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Anaconda是python的一个科学计算发行版，包含了众多流行的科学、数学、工程、数据分析的Python包&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;从官方网站下载有点慢。如果用安装包进行安装，
可以从&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/"&gt;清华大学开源软件镜像站(TUNA)&lt;/a&gt;下载。
但还是建议&lt;a href="http://holbrook.github.io/2017/02/11/windows_pkg_manager_chocolatey.html"&gt;使用包管理器&lt;/a&gt;
进行安装，安装后再配置TNUA 上Anaconda 仓库的镜像作为源：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装和配置完 Anaconda 后，可以使用其自带的 python 包管理器安装 python 模块，也可以使用常用的 &lt;code&gt;pip&lt;/code&gt;。
但要注意环境的配置。比如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda --version  # 查看版本
conda install seaborn #
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="ipython-jupyter-he-spyder"&gt;ipython, jupyter 和 spyder&lt;/h2&gt;
&lt;p&gt;python 本身提供了类似shell的交互式解释器，但是并不好用， &lt;a href="http://ipython.org/"&gt;IPython&lt;/a&gt; 对其进行了极大加强。
IPython是一个增强的 Python Shell，目的是提高编写、测试、调试 Python 代码的速度。
主要用于交互式数据处理和利用matplotlib 对数据进行可视化处理。&lt;/p&gt;
&lt;p&gt;不仅如此，IPython 还提供了 web 方式的 IPython notebook(现在叫做&lt;a href="https://jupyter.org/"&gt;jupyter&lt;/a&gt;)，
已经成为Python科学计算界的标准配置。&lt;/p&gt;
&lt;p&gt;如果你喜欢像 R 一样的 GUI 程序，可以使用命令&lt;code&gt;jupyter qtconsole&lt;/code&gt;打开一个图形界面。&lt;/p&gt;
&lt;p&gt;如果喜欢 RStudio，可以使用 &lt;code&gt;spyder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;（附：可能是 IPython notebook 太好用了，
RStudio 现在也实现了一个类似的 web 交互工具 &lt;a href="https://www.rstudio.com/products/shiny/"&gt;shiny&lt;/a&gt;)。&lt;/p&gt;
&lt;h2 id="cython"&gt;Cython&lt;/h2&gt;
&lt;p&gt;编译Python程序，提高性能。&lt;/p&gt;
&lt;h1 id="di-ceng-ku_1"&gt;底层库&lt;/h1&gt;
&lt;h2 id="numpy"&gt;NumPy&lt;/h2&gt;
&lt;p&gt;python 中本来提供了 列表(list) 和 数组(array), 可以用来构建矩阵。
但是这些都是通用数据结构，对于纯数值运算来说效率不高。而且没有矩阵运算的函数。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.numpy.org/"&gt;NumPy&lt;/a&gt; 弥补了这些不足，为线性代数的计算提供了极大帮助。
NumPy 定义了ndarray(N维数组对象，N-dimensional array object)和
ufunc(通用函数对象, universal function object)，
分别用于多维数组的存储和处理。
其中，ufunc 是一种能对数组的每个元素进行操作的函数。
Numpy 还支持线性代数运算和随机数生成。&lt;/p&gt;
&lt;p&gt;Numpy是下面很多模块的基础模块。&lt;/p&gt;
&lt;h1 id="scipy_1"&gt;SciPy&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://www.scipy.org/"&gt;SciPy&lt;/a&gt;在NumPy的基础上增加了众多的数学、科学以及工程计算中常用的模块。
通过不同的子模块，SciPy 提供了线性代数、拟合与优化、差值、数值积分、图像处理、系数矩阵处理等函数。&lt;/p&gt;
&lt;p&gt;Numpy 已经提供了线性代数函数库，但是SciPy的线性代数库比NumPy更加全面。&lt;/p&gt;
&lt;p&gt;SciPy 的主要子模块包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scipy.integrate: 数值积分例程和微分方程求解器&lt;/li&gt;
&lt;li&gt;scipy.linalg: 扩展了由 numpy.linalg 提供的线性代数例程和矩阵分解功能&lt;/li&gt;
&lt;li&gt;scipy.optimize: 函数优化器以及根查找算法&lt;/li&gt;
&lt;li&gt;scipy.signal: 信号处理工具&lt;/li&gt;
&lt;li&gt;scipy.sparse: 稀疏矩阵和稀疏线性系统求解器&lt;/li&gt;
&lt;li&gt;scipy.special: SPECFUN（这是一个实现了许多常用数学函数的 Fortran 库）的包装器&lt;/li&gt;
&lt;li&gt;scipy.stats: 标准连续和离散概率分布、各种统计检验方法和更好的描述统计法&lt;/li&gt;
&lt;li&gt;scipy.weave: 利用内联 C++ 代码加速数组计算的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="matplotlib"&gt;matplotlib&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://matplotlib.org/"&gt;Matplotlib&lt;/a&gt;为 python 提供了一整套和MATLAB类似的绘图函数集。
Matplotlib 很强大，但是比较底层。高级的python 数据处理模块会调用 Matplotlib 实现更简单的绘图函数，
比如后面要提到的 Pandas, Seaborn等。
但是要对图表进行精细的、个性化的调整时，还是需要掌握 Matplotlib 的函数。&lt;/p&gt;
&lt;h1 id="shu-ju-fen-xi-he-chu-li"&gt;数据分析和处理&lt;/h1&gt;
&lt;h2 id="pandas"&gt;Pandas&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt;, Python Data Analysis Library,
是 python 数据分析领域里程碑式的一个重要工具。&lt;/p&gt;
&lt;p&gt;Pandas 基于 NumPy, 实现了&lt;code&gt;Series(序列)&lt;/code&gt;和类似 R的 &lt;code&gt;DataFrame&lt;/code&gt; 对象，
提供了大量能使我们快速便捷地处理数据的函数和方法。&lt;/p&gt;
&lt;p&gt;Pandas 很好的解决了数据分析的大部分任务，是所有中等规模数据分析的最有效的工具。&lt;/p&gt;
&lt;h2 id="statsmodels"&gt;Statsmodels&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://statsmodels.sourceforge.net/"&gt;Statsmodels&lt;/a&gt;
是 Python 中一个强大的统计分析包，包含了描述统计、回归分析、时间序列分析、假设检验等等的功能。&lt;/p&gt;
&lt;p&gt;一些主要的功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linear regression models&lt;/li&gt;
&lt;li&gt;Generalized linear models&lt;/li&gt;
&lt;li&gt;Discrete choice models&lt;/li&gt;
&lt;li&gt;Robust linear models&lt;/li&gt;
&lt;li&gt;Many models and functions for time series analysis&lt;/li&gt;
&lt;li&gt;Nonparametric estimators&lt;/li&gt;
&lt;li&gt;A collection of datasets for examples&lt;/li&gt;
&lt;li&gt;A wide range of statistical tests&lt;/li&gt;
&lt;li&gt;Input-output tools for producing tables in a number of formats (Text, LaTex, HTML) and for reading Stata files -into NumPy and Pandas.&lt;/li&gt;
&lt;li&gt;Plotting functions&lt;/li&gt;
&lt;li&gt;Extensive unit tests to ensure correctness of results&lt;/li&gt;
&lt;li&gt;Many more models and extensions in development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sympy"&gt;SymPy&lt;/h2&gt;
&lt;p&gt;&lt;a href=""&gt;SymPy&lt;/a&gt;是Python的数学符号计算库，目标是成为一个全功能的代数系统。
SymPy支持符号计算、高精度计算、模式匹配、绘图、解方程、微积分、组合数学、离散数学、几何学、概率与统计、物理学等方面的功能。&lt;/p&gt;
&lt;h1 id="ke-shi-hua_1"&gt;可视化&lt;/h1&gt;
&lt;h2 id="seaborn"&gt;Seaborn&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://seaborn.pydata.org/"&gt;Seaborn&lt;/a&gt;
是基于 Matplotlib 的高级统计绘图工具（类似 Pandas 与 NumPy 的关系），其功能类似 R 中的 lattice。
Matplotlib很强大，但是也很复杂。因此推荐一开始使用Seaborn。&lt;/p&gt;
&lt;h2 id="bokeh"&gt;Bokeh&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://bokeh.pydata.org/en/latest/docs/user_guide.html"&gt;Bokeh(Bokeh.js)&lt;/a&gt;
是一个 Python 交互式可视化库，支持现代化 Web 浏览器，提供非常完美的展示功能。&lt;/p&gt;
&lt;p&gt;Bokeh 的目标是使用 D3.js 样式提供优雅，简洁新颖的图形化风格，同时提供大型数据集的高性能交互功能。&lt;/p&gt;
&lt;p&gt;Boken 可以快速的创建交互式的绘图，仪表盘和数据应用。&lt;/p&gt;
&lt;h2 id="tvtk"&gt;TVTK&lt;/h2&gt;
&lt;p&gt;数据的三维可视化&lt;/p&gt;
&lt;h2 id="vpython"&gt;VPython&lt;/h2&gt;
&lt;p&gt;制作3D演示动画&lt;/p&gt;
&lt;h2 id="opencv"&gt;OpenCV&lt;/h2&gt;
&lt;p&gt;图像处理和计算机视觉&lt;/p&gt;
&lt;h1 id="ji-qi-xue-xi_1"&gt;机器学习&lt;/h1&gt;
&lt;h2 id="scikit-learn"&gt;scikit-learn&lt;/h2&gt;
&lt;p&gt;For machine learning and artificial intelligence algorithms&lt;/p&gt;
&lt;h2 id="pytorch"&gt;PyTorch&lt;/h2&gt;
&lt;p&gt;深度学习&lt;/p&gt;
&lt;h1 id="enthought-tool-suite_1"&gt;Enthought Tool Suite&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://code.enthought.com/projects/index.php"&gt;Enthought Tool Suite&lt;/a&gt;是
&lt;a href="http://code.enthought.com/"&gt;Enthought公司&lt;/a&gt;开发的开源科学计算一套应用程序开发包。
包含了大量的工具。主要的工具包括：&lt;/p&gt;
&lt;h2 id="traits"&gt;Traits&lt;/h2&gt;
&lt;p&gt;Explicit type declarations; validation; initialization; delegation; notification; visualization.&lt;/p&gt;
&lt;h2 id="traitsui"&gt;TraitsUI&lt;/h2&gt;
&lt;p&gt;A UI layer that supports the visualization features of Traits. Implementations using wxWidgets and Qt are provided by the TraitsBackendWX and TraitsBackendQt projects.&lt;/p&gt;
&lt;h2 id="chaco"&gt;Chaco&lt;/h2&gt;
&lt;p&gt;交互式 2D 图表&lt;/p&gt;
&lt;h2 id="mayavi"&gt;Mayavi&lt;/h2&gt;
&lt;p&gt;交互式 3D 图表&lt;/p&gt;
&lt;h2 id="qi-ta"&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Enaml
  Library for creating professional quality user interfaces combining a domain specific declarative language with a constraints based layout.&lt;/li&gt;
&lt;li&gt;Envisage
  Python-based framework for building extensible (plugin-based) applications.&lt;/li&gt;
&lt;li&gt;Pyface
  toolkit-independent GUI abstraction layer, which is used to support the "visualization" features of the Traits package.&lt;/li&gt;
&lt;li&gt;BlockCanvas
  Visual environment for creating simulation experiments, where function and data are separated using CodeTools.&lt;/li&gt;
&lt;li&gt;GraphCanvas
  library for interacting with visualizations of complex graphs.&lt;/li&gt;
&lt;li&gt;Enable
  Object drawing library and PDF vector drawing engine.&lt;/li&gt;
&lt;li&gt;SciMath
  Convenience libraries for math, interpolation, and units&lt;/li&gt;
&lt;li&gt;Casuarius
  supports constraints based layout in Enaml by wrapping Cassowary.&lt;/li&gt;
&lt;li&gt;AppTools
  General tools for ETS application development: scripting, logging, preferences, ...&lt;/li&gt;
&lt;li&gt;EnCore
  Core tools for application development (only depends on the Standard library).&lt;/li&gt;
&lt;li&gt;and more...&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="can-kao-zi-liao_1"&gt;参考资料&lt;/h1&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/super-d2/p/4725818.html"&gt;Python科学计算发行版&amp;mdash;Anaconda&lt;/a&gt;&amp;nbsp;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-2"&gt;
&lt;p&gt;&lt;a href="http://hyry.dip.jp/tech/book/page/scipy/index.html"&gt;用Python做科学计算&lt;/a&gt;&amp;nbsp;&lt;a class="footnote-backref" href="#fnref-2" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-3"&gt;
&lt;p&gt;&lt;a href="http://hyry.dip.jp/tech/book/page/scipynew/index.html"&gt;用Python做科学计算(第二版)&lt;/a&gt;&amp;nbsp;&lt;a class="footnote-backref" href="#fnref-3" title="Jump back to footnote 3 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-4"&gt;
&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/"&gt;Comprehensive learning path &amp;ndash; Data Science in Python&lt;/a&gt;&amp;nbsp;&lt;a class="footnote-backref" href="#fnref-4" title="Jump back to footnote 4 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-5"&gt;
&lt;p&gt;&lt;a href="http://aliquote.org/memos/2011/02/07/python-for-statistical-computing"&gt;Python for statistical computing&lt;/a&gt;&amp;nbsp;&lt;a class="footnote-backref" href="#fnref-5" title="Jump back to footnote 5 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/hr&gt;&lt;/div&gt;</content><category term="python"></category><category term="env"></category></entry><entry><title>数据科学的知识体系</title><link href="http://holbrook.github.io/2017/02/05/index.html" rel="alternate"></link><published>2017-02-05T00:00:00+08:00</published><updated>2017-02-05T00:00:00+08:00</updated><author><name>Holbrook</name></author><id>tag:holbrook.github.io,2017-02-05:/2017/02/05/index.html</id><summary type="html">&lt;p&gt;数据科学是利用计算机的运算能力对数据进行处理，从数据中提取信息，进而形成“知识”。
然而要实现这一点并不容易。Swami Chandrasekaran在他的&lt;a href="http://nirvacana.com/thoughts/becoming-a-data-scientist/"&gt;《Becoming a Data Scientist》&lt;/a&gt;中，规划了“数据科学家”之路，让我们共勉。&lt;/p&gt;</summary><content type="html">&lt;p&gt;数据科学是利用计算机的运算能力对数据进行处理，从数据中提取信息，进而形成&amp;ldquo;知识&amp;rdquo;。
然而要实现这一点并不容易。Swami Chandrasekaran在他的&lt;a href="http://nirvacana.com/thoughts/becoming-a-data-scientist/"&gt;《Becoming a Data Scientist》&lt;/a&gt;中，规划了&amp;ldquo;数据科学家&amp;rdquo;之路，让我们共勉。&lt;/p&gt;
&lt;p&gt;先上图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="MetroMap to Data Scientist" src="/images/long-road-to-data-scientist.png"/&gt;&lt;/p&gt;
&lt;h1 id="1ji-ben-yuan-li-fundamentals"&gt;1.基本原理(Fundamentals)&lt;/h1&gt;
&lt;h2 id="ju-zhen-he-xian-xing-dai-shu-matrices-linear-algebra"&gt;矩阵和线性代数(Matrices &amp;amp; Linear Algebra)&lt;/h2&gt;
&lt;h2 id="shu-ju-cun-chu-he-chu-li"&gt;数据存储和处理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;哈希函数，二叉树，时间复杂度(Hash Functions,Binary Tree,O(n))&lt;/li&gt;
&lt;li&gt;关系代数和数据库基础(Relational Algebra,DB Basic)&lt;/li&gt;
&lt;li&gt;内连接、外连接、交叉连接、&amp;theta;连接(Inner、Outer、Cross、Theta Join)&lt;/li&gt;
&lt;li&gt;CAP定理（CAP Theorem）&lt;/li&gt;
&lt;li&gt;列表数据(tabular data)&lt;/li&gt;
&lt;li&gt;数据框和序列(DataFrames &amp;amp; Series)&lt;/li&gt;
&lt;li&gt;分片(Sharding)&lt;/li&gt;
&lt;li&gt;联机分析处理（OLAP, Online Analytical Processing）&lt;/li&gt;
&lt;li&gt;多维数据模型(Multidimensional Data Model)&lt;/li&gt;
&lt;li&gt;ETL&lt;/li&gt;
&lt;li&gt;报表，商业智能与分析(Reporting vs BI vs Analytics)&lt;/li&gt;
&lt;li&gt;JSON &amp;amp; XML&lt;/li&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;正则表达式（Regex, Regular Expression）&lt;/li&gt;
&lt;li&gt;业务背景知识(Vendor Landscape)&lt;/li&gt;
&lt;li&gt;安装环境(Env Setup)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="2tong-ji-xue-statistics_1"&gt;2.统计学(Statistics)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;获取数据(Pick a Dataset)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UCI Repo: UCI数据库。是加州大学欧文分校(University of CaliforniaIrvine)
  提出的用于机器学习的数据库，有大量的数据集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;描述性统计Descriptive Statistics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;均值，中位数，极差，标准差，方差(（mean, median, range, SD, Var）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;探索性数据分析(Exploratory Data Analysis)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直方图(Histograms)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;百分位数和极值(Percentiles &amp;amp; Outliers)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;概率论(Probability Theory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;贝叶斯定理(Bayes Theorem)&lt;/li&gt;
&lt;li&gt;随机变量(Random Variables)&lt;/li&gt;
&lt;li&gt;累计分布函数（CDF, Cumulative Distribution Function)&lt;/li&gt;
&lt;li&gt;连续分布(Continuos Distributions)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正态分布、泊松分布、高斯分布(Normal, Poisson, Gaussian)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;偏度(Skewness)&lt;/li&gt;
&lt;li&gt;方差分析(ANOVA)&lt;/li&gt;
&lt;li&gt;概率密度函数(PDF,Prob Den Fn)&lt;/li&gt;
&lt;li&gt;中心极限定理(Central Limit THeorem)&lt;/li&gt;
&lt;li&gt;蒙特卡罗方法(Monte Carlo Method)&lt;/li&gt;
&lt;li&gt;假设检验(Hypothesis Testing)&lt;/li&gt;
&lt;li&gt;P值(p-Value)&lt;/li&gt;
&lt;li&gt;卡方检验(Chi2 Test)&lt;/li&gt;
&lt;li&gt;估计(Estimation)&lt;/li&gt;
&lt;li&gt;置信区间(CI,Confid Int)&lt;/li&gt;
&lt;li&gt;极大似然估计(MLE)&lt;/li&gt;
&lt;li&gt;核密度估计(Kernel Density Estimate)&lt;/li&gt;
&lt;li&gt;回归(Regression)&lt;/li&gt;
&lt;li&gt;协方差(Convariance)&lt;/li&gt;
&lt;li&gt;相关性(Correlation)&lt;/li&gt;
&lt;li&gt;皮尔逊相关系数(Pearson Coeff)&lt;/li&gt;
&lt;li&gt;因果性(Causation)&lt;/li&gt;
&lt;li&gt;最小二乘法(Least2 fit)&lt;/li&gt;
&lt;li&gt;欧氏距离(Eculidean Distance)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="3bian-cheng-programming"&gt;3.编程(Programming)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;python基础(Python Basics)&lt;/li&gt;
&lt;li&gt;R&lt;/li&gt;
&lt;li&gt;Excel&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据结构
  Swami Chandrasekaran 给出的是 R 中的数据结构，但可以映射到python中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变量(Varibles)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;向量(Vectors)&lt;/li&gt;
&lt;li&gt;矩阵(Matrices)&lt;/li&gt;
&lt;li&gt;数组(Arrays)&lt;/li&gt;
&lt;li&gt;因子(Factors)&lt;/li&gt;
&lt;li&gt;列表(Lists)&lt;/li&gt;
&lt;li&gt;数据框(Data Frames)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="4ji-qi-xue-xi-machine-learning"&gt;4.机器学习(Machine Learning)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;机器学习与数据挖掘的区别(What is ML?)&lt;/li&gt;
&lt;li&gt;数值变量(Numerical Var)&lt;/li&gt;
&lt;li&gt;分类变量(Categorical Var)&lt;/li&gt;
&lt;li&gt;监督学习(Supervised Learning)&lt;/li&gt;
&lt;li&gt;无监督学习(Unsupervied Learning)&lt;/li&gt;
&lt;li&gt;概念、输入和特征(Concepts, Inputs &amp;amp; Attributes)&lt;/li&gt;
&lt;li&gt;训练集和测试集(Traning &amp;amp; Test Data)&lt;/li&gt;
&lt;li&gt;分类器(Classifier)&lt;/li&gt;
&lt;li&gt;预测(Prediction)&lt;/li&gt;
&lt;li&gt;Lift曲线&lt;/li&gt;
&lt;li&gt;过拟合(Overfitting)&lt;/li&gt;
&lt;li&gt;偏差和方差(Bias &amp;amp; Variance)&lt;/li&gt;
&lt;li&gt;树分类(Trees &amp;amp; Classification)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分类问题(Classification)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分类正确率(Classification Rate)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;决策树(Decision Trees)&lt;/li&gt;
&lt;li&gt;提升方法(Boosting)&lt;/li&gt;
&lt;li&gt;朴素贝叶斯分类(Naive Bayes Classifiers)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K近邻分类(K-Nearest Neighbour)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回归问题(Regression)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑回归(Logistic Regression)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;排序(Ranking)&lt;/li&gt;
&lt;li&gt;线性回归(Linear Regression)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;感知机(Perceptron)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聚类问题(Clustering)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;层次聚类(Hierarchical Clustering)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K聚类(K-means Clusterning)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;神经网络(Neural Networks)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;情感分析(Sentiment Analysis)&lt;/li&gt;
&lt;li&gt;协同过滤(Collaborative Fitering)&lt;/li&gt;
&lt;li&gt;标签(Tagging)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="5wen-ben-wa-jue-zi-ran-yu-yan-chu-li-text-mining-nlp"&gt;5.文本挖掘/自然语言处理(Text Mining / NLP)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;语料库(Corpus)&lt;/li&gt;
&lt;li&gt;命名实体识别(Named Entity Recognition)&lt;/li&gt;
&lt;li&gt;文本分析(Text Analysis)&lt;/li&gt;
&lt;li&gt;UIMA&lt;/li&gt;
&lt;li&gt;词-文档矩阵(Term Document Matrix)&lt;/li&gt;
&lt;li&gt;词频和权重(Term Frequency &amp;amp; Weight)&lt;/li&gt;
&lt;li&gt;支持向量机(Support Vector Machines)&lt;/li&gt;
&lt;li&gt;关联规则(Association Rules)&lt;/li&gt;
&lt;li&gt;购物篮分析(Market Basket Analysis)&lt;/li&gt;
&lt;li&gt;特征提取(Feature Extraction)&lt;/li&gt;
&lt;li&gt;工具箱&lt;/li&gt;
&lt;li&gt;Mahout&lt;/li&gt;
&lt;li&gt;Weka&lt;/li&gt;
&lt;li&gt;NLTK&lt;/li&gt;
&lt;li&gt;文本分类(Classify Text)&lt;/li&gt;
&lt;li&gt;词汇映射(Vocabulary Mapping)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="6shu-ju-ke-shi-hua"&gt;6.数据可视化&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;单变量、双变量和多变量可视化(Uni, Bi &amp;amp; Multivariate Viz)&lt;/li&gt;
&lt;li&gt;ggplot2(R中的一个可视化包，python中使用pyplotlib)&lt;/li&gt;
&lt;li&gt;直方图和饼图（单变量）(Histogram &amp;amp; Pie(Uni))&lt;/li&gt;
&lt;li&gt;树图和矩形树图(Tree &amp;amp; Tree Map)&lt;/li&gt;
&lt;li&gt;散点图（双变量）(Scatter Plot (Bi))&lt;/li&gt;
&lt;li&gt;折线图（双变量）(Line Charts (Bi))&lt;/li&gt;
&lt;li&gt;空间图(Spatial Charts)&lt;/li&gt;
&lt;li&gt;Survey Plot&lt;/li&gt;
&lt;li&gt;时间轴(Timeline)&lt;/li&gt;
&lt;li&gt;决策树(Decision Tree)&lt;/li&gt;
&lt;li&gt;D3.js(知名的数据可视化前端框架)&lt;/li&gt;
&lt;li&gt;IBM ManyEyes(IBM的一款在线可视化处理工具)&lt;/li&gt;
&lt;li&gt;Tableau(国外知名的商用BI)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="7da-shu-ju-big-data"&gt;7.大数据(Big Data)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MapReduce框架(Map Reduce Fundamentals)&lt;/li&gt;
&lt;li&gt;Hadoop组件(Hadoop Components)&lt;/li&gt;
&lt;li&gt;HDFS(Hadoop分布式文件系统,Hadoop Distributed FilesSystem）&lt;/li&gt;
&lt;li&gt;数据复制原理(Data Replication Principles)&lt;/li&gt;
&lt;li&gt;名称和数据节点(Name &amp;amp; Data Nodes)&lt;/li&gt;
&lt;li&gt;任务跟踪(Job &amp;amp; Task Tracker)&lt;/li&gt;
&lt;li&gt;Map/Reduce编程(M/R Programming)&lt;/li&gt;
&lt;li&gt;Sqoop工具: Loading Data in HDFS&lt;/li&gt;
&lt;li&gt;Flue, Scribe: 处理非结构化数据&lt;/li&gt;
&lt;li&gt;利用Pig语言进行SQL操作(SQL with Pig)&lt;/li&gt;
&lt;li&gt;利用Hive来实现数据仓库(DWH with Hive)&lt;/li&gt;
&lt;li&gt;Scribe, Chukwa For Weblog(日志收集器和数据收集器)&lt;/li&gt;
&lt;li&gt;使用Mahout&lt;/li&gt;
&lt;li&gt;Zookeeper 和 Avro&lt;/li&gt;
&lt;li&gt;Storm: Hadoop Realtime&lt;/li&gt;
&lt;li&gt;Rhadoop, RHipe, SparkR ： 将R和hadoop结合起来的架构&lt;/li&gt;
&lt;li&gt;rmr: RHadoop的一个包，和hadoop的MapReduce相关&lt;/li&gt;
&lt;li&gt;NoSql数据库&lt;/li&gt;
&lt;li&gt;Classandra&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;Neo4j&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="8shu-ju-she-qu-ingestion"&gt;8.数据摄取(ingestion)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;数据格式概要(Summary of Data Formats)&lt;/li&gt;
&lt;li&gt;数据发现(Data Discovery)&lt;/li&gt;
&lt;li&gt;数据来源与采集(Data Sources &amp;amp; Acquisition)&lt;/li&gt;
&lt;li&gt;数据集成(Data Integration)&lt;/li&gt;
&lt;li&gt;数据融合(Data Fusion)&lt;/li&gt;
&lt;li&gt;转换和浓缩(Transformation &amp;amp; Enrichament)&lt;/li&gt;
&lt;li&gt;数据调查(Data Survey)&lt;/li&gt;
&lt;li&gt;Google OpenRefine: Google发布的开源的数据处理软件&lt;/li&gt;
&lt;li&gt;数据量级(How much Data)&lt;/li&gt;
&lt;li&gt;ETL&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="9shu-ju-qing-xi-munging"&gt;9.数据清洗(munging)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;维度与数值归约(Dimensionality &amp;amp; Numerosity Reduction)&lt;/li&gt;
&lt;li&gt;数据规范化(Normalization)&lt;/li&gt;
&lt;li&gt;数据清洗(Data Scrubbing)&lt;/li&gt;
&lt;li&gt;缺失值处理(Handling Missing Values)&lt;/li&gt;
&lt;li&gt;无偏估计量(Unbiased Estimators)&lt;/li&gt;
&lt;li&gt;分箱稀疏值(Binning Sparse Values)&lt;/li&gt;
&lt;li&gt;特征提取／特征工程(Feature Extraction)&lt;/li&gt;
&lt;li&gt;去噪(Denoising)&lt;/li&gt;
&lt;li&gt;抽样(Sampling)&lt;/li&gt;
&lt;li&gt;分层抽样(Stratified Sampling)&lt;/li&gt;
&lt;li&gt;主成分分析(PCA,Principal Component Analysis)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="10gong-ju-ji"&gt;10.工具集&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;微软的Excel及其自带的分析工具库(MS Excel / Analysis ToolPak)&lt;/li&gt;
&lt;li&gt;Java, Python&lt;/li&gt;
&lt;li&gt;R, R-Studio, Rattle（Rattle是基于R的数据挖掘工具，提供了GUI）&lt;/li&gt;
&lt;li&gt;Weka(基于JAVA环境下开源的机器学习以及数据挖掘软件)&lt;/li&gt;
&lt;li&gt;Knime(基于Eclipse环境的开源商业智能工具)&lt;/li&gt;
&lt;li&gt;RapidMiner(开源的数据挖掘软件,提供一些可扩展的数据分析挖掘算法的实现。)&lt;/li&gt;
&lt;li&gt;Hadoop发行版选择(Hadoop Dist of Choice)&lt;/li&gt;
&lt;li&gt;Spark, Storm: Hadoop相关的实时处理框架，是对Hadoop的补充和完善&lt;/li&gt;
&lt;li&gt;Flume: 海量日志采集、聚合和传输的系统&lt;/li&gt;
&lt;li&gt;Scribe: Facebook开源的日志收集系统，在Facebook内部已经得到的应用&lt;/li&gt;
&lt;li&gt;Chukwa: 开源的用于监控大型分布式系统的数据收集系统&lt;/li&gt;
&lt;li&gt;Nutch: 一个开源的Java搜索引擎&lt;/li&gt;
&lt;li&gt;Talend： 一家专业的开源集成软件公司，提供各类数据工具&lt;/li&gt;
&lt;li&gt;ScraperWiKi： 致力于数据科学领域维基百科网站，帮助个人和企业获得最专业的可视化数据，并支持对数据进行分析和管理&lt;/li&gt;
&lt;li&gt;Webscraper： 网页爬虫&lt;/li&gt;
&lt;li&gt;Flume: 海量日志采集、聚合和传输的系统&lt;/li&gt;
&lt;li&gt;Sqoop: Haddop套件&lt;/li&gt;
&lt;li&gt;tm: R语言的文本挖掘包&lt;/li&gt;
&lt;li&gt;RWeka: R的weka算法包&lt;/li&gt;
&lt;li&gt;NLTK: 自然语言工具包&lt;/li&gt;
&lt;li&gt;RHIPE: R与Hadoop相关的开发环境&lt;/li&gt;
&lt;li&gt;D3.js&lt;/li&gt;
&lt;li&gt;ggplot2&lt;/li&gt;
&lt;li&gt;Shiny: 在线网页交互可视化工具, 可以将R语言作为半个BI用。&lt;/li&gt;
&lt;li&gt;IBM Languageware: IBM的自然语言处理&lt;/li&gt;
&lt;li&gt;Cassandra, MongoDB: 2种NoSql数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="can-kao-zi-liao"&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zhihu.com/question/21592677/answer/142800018"&gt;知乎上面秦路的回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/vamei/p/3178534.html"&gt;Vamei对数据科学的理解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry></feed>